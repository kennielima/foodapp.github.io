{"ast":null,"code":"var _jsxFileName = \"/Users/kennielima/trial/src/components/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\n\n// const DUMMY_MEALS = [\n//     {\n//       id: 'm1',\n//       name: 'Sushi',\n//       description: 'Finest fish and veggies',\n//       price: 22.99,\n//     },\n//     {\n//       id: 'm2',\n//       name: 'Schnitzel',\n//       description: 'A german specialty!',\n//       price: 16.5,\n//     },\n//     {\n//       id: 'm3',\n//       name: 'Barbecue Burger',\n//       description: 'American, raw, meaty',\n//       price: 12.99,\n//     },\n//     {\n//       id: 'm4',\n//       name: 'Green Bowl',\n//       description: 'Healthy...and green...',\n//       price: 18.99,\n//     },\n//   ];\n\n// let names = '';\n// let price = '';\n// for (let each of DUMMY_MEALS){\n//     names += each.name;\n//     price += each.price\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testContext = /*#__PURE__*/React.createContext();\nexport function CartProvider(props) {\n  _s();\n  const reducer = (state, action) => {\n    if (action.type === \"addlist\") {\n      // check if any object in the state has the same name as action.list.name\n      // if such an object exists, then increment the price and amount with action.list.x\n      // otherwise, then just action.list.x to the state\n\n      for (let eachstate of state) {\n        if (eachstate.name === action.list.name) {\n          // return (\n          //     // eachstate.price += action.list.price,\n          //     // eachstate.amount += action.list.amount\n          //     )\n          console.log(eachstate.amount += 1);\n        }\n      }\n      //    else {\n      return [...state, {\n        name: action.list.name,\n        price: +action.list.price,\n        amount: +action.list.amount\n      }];\n      // }\n    }\n  };\n\n  const [list, dispatch] = useReducer(reducer, []);\n  // const saveList = (name, price,amount) => {\n  //     setList([...list, {name, price, amount}]);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(testContext.Provider, {\n    value: {\n      list,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"+RhukCZfA/sOkFN5d8Ok1zKXKt8=\");\n_c = CartProvider;\nexport default testContext;\n{/* <testContext.Provider\n    value={{\n       name: [],\n       price: [],\n       amount: 0,\n }}\n > */}\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","testContext","createContext","CartProvider","props","_s","reducer","state","action","type","eachstate","name","list","console","log","amount","price","dispatch","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kennielima/trial/src/components/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react';\n\n// const DUMMY_MEALS = [\n//     {\n//       id: 'm1',\n//       name: 'Sushi',\n//       description: 'Finest fish and veggies',\n//       price: 22.99,\n//     },\n//     {\n//       id: 'm2',\n//       name: 'Schnitzel',\n//       description: 'A german specialty!',\n//       price: 16.5,\n//     },\n//     {\n//       id: 'm3',\n//       name: 'Barbecue Burger',\n//       description: 'American, raw, meaty',\n//       price: 12.99,\n//     },\n//     {\n//       id: 'm4',\n//       name: 'Green Bowl',\n//       description: 'Healthy...and green...',\n//       price: 18.99,\n//     },\n//   ];\n\n// let names = '';\n// let price = '';\n// for (let each of DUMMY_MEALS){\n//     names += each.name;\n//     price += each.price\n// };\nconst testContext = React.createContext();\n\nexport function CartProvider(props){\n    const reducer = (state, action ) => {\n        if (action.type === \"addlist\"){\n// check if any object in the state has the same name as action.list.name\n// if such an object exists, then increment the price and amount with action.list.x\n// otherwise, then just action.list.x to the state\n\nfor (let eachstate of state){\n    if (eachstate.name === action.list.name){\n        // return (\n        //     // eachstate.price += action.list.price,\n        //     // eachstate.amount += action.list.amount\n        //     )\n        console.log(eachstate.amount += 1)\n\n    }\n}\n        //    else {\n            return ([...state, {\n                name: action.list.name,\n                price: +action.list.price,\n                amount: +action.list.amount\n            }]);\n        // }\n        }\n    }\n    const [ list, dispatch ] = useReducer(reducer, []);\n    // const saveList = (name, price,amount) => {\n    //     setList([...list, {name, price, amount}]);\n    // }\n\nreturn (\n    <testContext.Provider value={{list, dispatch}}>\n        {props.children}\n    </testContext.Provider>\n);\n}\n\nexport default testContext;\n\n    {/* <testContext.Provider\n        value={{\n           name: [],\n           price: [],\n           amount: 0,\n    }}\n    > */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,EAAE;AAEzC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAM;IAChC,IAAIA,MAAM,CAACC,IAAI,KAAK,SAAS,EAAC;MACtC;MACA;MACA;;MAEA,KAAK,IAAIC,SAAS,IAAIH,KAAK,EAAC;QACxB,IAAIG,SAAS,CAACC,IAAI,KAAKH,MAAM,CAACI,IAAI,CAACD,IAAI,EAAC;UACpC;UACA;UACA;UACA;UACAE,OAAO,CAACC,GAAG,CAACJ,SAAS,CAACK,MAAM,IAAI,CAAC,CAAC;QAEtC;MACJ;MACQ;MACI,OAAQ,CAAC,GAAGR,KAAK,EAAE;QACfI,IAAI,EAAEH,MAAM,CAACI,IAAI,CAACD,IAAI;QACtBK,KAAK,EAAE,CAACR,MAAM,CAACI,IAAI,CAACI,KAAK;QACzBD,MAAM,EAAE,CAACP,MAAM,CAACI,IAAI,CAACG;MACzB,CAAC,CAAC;MACN;IACA;EACJ,CAAC;;EACD,MAAM,CAAEH,IAAI,EAAEK,QAAQ,CAAE,GAAGnB,UAAU,CAACQ,OAAO,EAAE,EAAE,CAAC;EAClD;EACA;EACA;;EAEJ,oBACIN,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACP,IAAI;MAAEK;IAAQ,CAAE;IAAAG,QAAA,EACzChB,KAAK,CAACgB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE3B;AAACnB,EAAA,CApCeF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAsC5B,eAAeF,WAAW;AAEtB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,KANK;AAMI,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}