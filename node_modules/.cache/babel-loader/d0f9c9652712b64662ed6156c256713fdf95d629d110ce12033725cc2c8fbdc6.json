{"ast":null,"code":"var _jsxFileName = \"/Users/kennielima/trial/src/components/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testContext = /*#__PURE__*/React.createContext({\n  list: [],\n  totalAmount: 0,\n  addlist: list => {}\n});\nexport function CartProvider(props) {\n  _s();\n  const defaultCart = {\n    list: [],\n    totalAmount: 0\n  };\n  const reducer = (state, action) => {\n    if (action.type === \"addlist\") {\n      // const existingItem = state.list.filter(e => e.name === action.list.name);\n      // if (existingItem.length > 0) {\n      //     existingItem[0].price += action.list.price;\n      //     existingItem[0].amount += action.list.amount;\n      // } else {\n      //     state.list.push({\n      //         name: action.list.name,\n      //         price: +action.list.price,\n      //         amount: +action.list.amount,\n      //     })\n      // }\n      // // for (let eachstate of state) {\n      // //     totalAmount += eachstate.amount;\n      // // }\n      // // console.log(totalAmount);\n\n      // return ([...state])\n\n      for (let eachstate of state.list) {\n        if (eachstate.name === action.list.name) {\n          eachstate.price += action.list.price;\n          eachstate.amount += action.list.amount;\n          //return ([...state]);\n        }\n      }\n\n      {\n        [...state, {\n          name: action.list.name,\n          price: +action.list.price,\n          amount: +action.list.amount\n        }];\n      }\n      return {\n        list: [],\n        totalAmount: 0\n      };\n    }\n  };\n  const [cartState, dispatch] = useReducer(reducer, defaultCart);\n  const addListHandler = list => {\n    dispatch({\n      type: \"addlist\",\n      list: list\n    });\n  };\n  const newContext = {\n    list: cartState.list,\n    totalAmount: 0,\n    addlist: addListHandler\n  };\n  return /*#__PURE__*/_jsxDEV(testContext.Provider, {\n    value: {\n      newContext\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"2i5iv8EjF4QFDT/8aWDL+r+AOCw=\");\n_c = CartProvider;\nexport default testContext;\n\n// const saveList = (name, price,amount) => {\n//     setList([...list, {name, price, amount}]);\n// }\n\n// const existingItem = state.filter(e => e.name === action.list.name);\n// if (existingItem.length > 0){\n//     existingItem[0].price += action.list.price;\n//     existingItem[0].amount += action.list.amount;\n//     return ([...state]);\n// }\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","testContext","createContext","list","totalAmount","addlist","CartProvider","props","_s","defaultCart","reducer","state","action","type","eachstate","name","price","amount","cartState","dispatch","addListHandler","newContext","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kennielima/trial/src/components/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react';\nconst testContext = React.createContext({\n    list: [],\n    totalAmount: 0,\n    addlist: (list) => {}\n});\n\nexport function CartProvider(props) {\n\n    const defaultCart = {\n        list: [],\n        totalAmount: 0\n    }\n\n    const reducer = (state, action) => {\n        if (action.type === \"addlist\") {\n\n            // const existingItem = state.list.filter(e => e.name === action.list.name);\n            // if (existingItem.length > 0) {\n            //     existingItem[0].price += action.list.price;\n            //     existingItem[0].amount += action.list.amount;\n            // } else {\n            //     state.list.push({\n            //         name: action.list.name,\n            //         price: +action.list.price,\n            //         amount: +action.list.amount,\n            //     })\n            // }\n            // // for (let eachstate of state) {\n            // //     totalAmount += eachstate.amount;\n            // // }\n            // // console.log(totalAmount);\n\n            // return ([...state])\n\n            for (let eachstate of state.list) {\n                if (eachstate.name === action.list.name) {\n                     eachstate.price += action.list.price;\n                     eachstate.amount += action.list.amount;\n                    //return ([...state]);\n                }\n            }\n             {[...state\n                , {\n                name: action.list.name,\n                price: +action.list.price,\n                amount: +action.list.amount,\n\n            }\n        ]}\n\n        return ({\n            list: [] ,\n            totalAmount: 0\n        })\n\n\n        }\n    }\n    const [cartState, dispatch] = useReducer(reducer, defaultCart);\n\n    const addListHandler = ((list) => {\n        dispatch({type: \"addlist\", list: list})\n    })\n\n    const newContext = {\n        list: cartState.list,\n        totalAmount: 0,\n        addlist: addListHandler \n    }\n    return (\n        <testContext.Provider value={{ newContext }}>\n            {props.children}\n        </testContext.Provider>\n    );\n}\n\nexport default testContext;\n\n    // const saveList = (name, price,amount) => {\n    //     setList([...list, {name, price, amount}]);\n    // }\n\n        // const existingItem = state.filter(e => e.name === action.list.name);\n            // if (existingItem.length > 0){\n            //     existingItem[0].price += action.list.price;\n            //     existingItem[0].amount += action.list.amount;\n            //     return ([...state]);\n        // }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,CAAC;EACpCC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,CAAC;EACdC,OAAO,EAAGF,IAAI,IAAK,CAAC;AACxB,CAAC,CAAC;AAEF,OAAO,SAASG,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEhC,MAAMC,WAAW,GAAG;IAChBN,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE;EACjB,CAAC;EAED,MAAMM,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC/B,IAAIA,MAAM,CAACC,IAAI,KAAK,SAAS,EAAE;MAE3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA,KAAK,IAAIC,SAAS,IAAIH,KAAK,CAACR,IAAI,EAAE;QAC9B,IAAIW,SAAS,CAACC,IAAI,KAAKH,MAAM,CAACT,IAAI,CAACY,IAAI,EAAE;UACpCD,SAAS,CAACE,KAAK,IAAIJ,MAAM,CAACT,IAAI,CAACa,KAAK;UACpCF,SAAS,CAACG,MAAM,IAAIL,MAAM,CAACT,IAAI,CAACc,MAAM;UACvC;QACJ;MACJ;;MACC;QAAC,CAAC,GAAGN,KAAK,EACL;UACFI,IAAI,EAAEH,MAAM,CAACT,IAAI,CAACY,IAAI;UACtBC,KAAK,EAAE,CAACJ,MAAM,CAACT,IAAI,CAACa,KAAK;UACzBC,MAAM,EAAE,CAACL,MAAM,CAACT,IAAI,CAACc;QAEzB,CAAC,CACJ;MAAA;MAED,OAAQ;QACJd,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE;MACjB,CAAC;IAGD;EACJ,CAAC;EACD,MAAM,CAACc,SAAS,EAAEC,QAAQ,CAAC,GAAGrB,UAAU,CAACY,OAAO,EAAED,WAAW,CAAC;EAE9D,MAAMW,cAAc,GAAKjB,IAAI,IAAK;IAC9BgB,QAAQ,CAAC;MAACN,IAAI,EAAE,SAAS;MAAEV,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC3C,CAAE;EAEF,MAAMkB,UAAU,GAAG;IACflB,IAAI,EAAEe,SAAS,CAACf,IAAI;IACpBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAEe;EACb,CAAC;EACD,oBACIpB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEF;IAAW,CAAE;IAAAG,QAAA,EACvCjB,KAAK,CAACiB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE/B;AAACpB,EAAA,CApEeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAsE5B,eAAeL,WAAW;;AAEtB;AACA;AACA;;AAEI;AACI;AACA;AACA;AACA;AACJ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}