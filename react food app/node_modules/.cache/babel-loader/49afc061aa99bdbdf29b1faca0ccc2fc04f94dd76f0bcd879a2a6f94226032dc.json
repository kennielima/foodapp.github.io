{"ast":null,"code":"var _jsxFileName = \"/Users/kennielima/trial/src/components/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testContext = /*#__PURE__*/React.createContext();\nexport function CartProvider(props) {\n  _s();\n  const reducer = (state, action) => {\n    let totalAmount = 0;\n    if (action.type === \"addlist\") {\n      totalAmount += action.list.price;\n      for (let eachstate of state) {\n        totalAmount = action.list.price + eachstate.price;\n        console.log(totalAmount);\n        if (eachstate.name === action.list.name) {\n          let price = eachstate.price += action.list.price;\n          let amount = eachstate.amount += action.list.amount;\n          return [...state];\n        }\n      }\n      // const existingItem = state.filter(e => e.name === action.list.name);\n      // if (existingItem.length > 0){\n      //     existingItem[0].price += action.list.price;\n      //     existingItem[0].amount += action.list.amount;\n      //     return ([...state]);\n      // }\n      return [...state, {\n        name: action.list.name,\n        price: +action.list.price,\n        amount: +action.list.amount\n        // totalAmount: totalAmount += action.list.price\n      }];\n    }\n  };\n\n  const [list, dispatch] = useReducer(reducer, []);\n  // const saveList = (name, price,amount) => {\n  //     setList([...list, {name, price, amount}]);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(testContext.Provider, {\n    value: {\n      list,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"dHKrJwvzgVCMRdc5OtWd66r9v3g=\");\n_c = CartProvider;\nexport default testContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","testContext","createContext","CartProvider","props","_s","reducer","state","action","totalAmount","type","list","price","eachstate","console","log","name","amount","dispatch","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kennielima/trial/src/components/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react';\nconst testContext = React.createContext();\n\nexport function CartProvider(props) {\n    const reducer = (state, action) => {\n        let totalAmount = 0;\n        \n        if (action.type === \"addlist\") {\n            totalAmount += action.list.price;\n            for (let eachstate of state) {\n                totalAmount = action.list.price + eachstate.price;\n                console.log(totalAmount);\n                if (eachstate.name === action.list.name) {\n                    let price = eachstate.price += action.list.price;\n                    let amount = eachstate.amount += action.list.amount;\n                    return ([...state]);\n                }\n            }\n            // const existingItem = state.filter(e => e.name === action.list.name);\n            // if (existingItem.length > 0){\n            //     existingItem[0].price += action.list.price;\n            //     existingItem[0].amount += action.list.amount;\n            //     return ([...state]);\n            // }\n            return ([...state, {\n                name: action.list.name,\n                price: +action.list.price,\n                amount: +action.list.amount,\n                // totalAmount: totalAmount += action.list.price\n            }]);\n            \n        }\n\n    }\n    const [list, dispatch] = useReducer(reducer, []);\n    // const saveList = (name, price,amount) => {\n    //     setList([...list, {name, price, amount}]);\n    // }\n\n    return (\n        <testContext.Provider value={{ list, dispatch }}>\n            {props.children}\n        </testContext.Provider>\n    );\n}\n\nexport default testContext;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAa,EAAE;AAEzC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC/B,IAAIC,WAAW,GAAG,CAAC;IAEnB,IAAID,MAAM,CAACE,IAAI,KAAK,SAAS,EAAE;MAC3BD,WAAW,IAAID,MAAM,CAACG,IAAI,CAACC,KAAK;MAChC,KAAK,IAAIC,SAAS,IAAIN,KAAK,EAAE;QACzBE,WAAW,GAAGD,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGC,SAAS,CAACD,KAAK;QACjDE,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;QACxB,IAAII,SAAS,CAACG,IAAI,KAAKR,MAAM,CAACG,IAAI,CAACK,IAAI,EAAE;UACrC,IAAIJ,KAAK,GAAGC,SAAS,CAACD,KAAK,IAAIJ,MAAM,CAACG,IAAI,CAACC,KAAK;UAChD,IAAIK,MAAM,GAAGJ,SAAS,CAACI,MAAM,IAAIT,MAAM,CAACG,IAAI,CAACM,MAAM;UACnD,OAAQ,CAAC,GAAGV,KAAK,CAAC;QACtB;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAQ,CAAC,GAAGA,KAAK,EAAE;QACfS,IAAI,EAAER,MAAM,CAACG,IAAI,CAACK,IAAI;QACtBJ,KAAK,EAAE,CAACJ,MAAM,CAACG,IAAI,CAACC,KAAK;QACzBK,MAAM,EAAE,CAACT,MAAM,CAACG,IAAI,CAACM;QACrB;MACJ,CAAC,CAAC;IAEN;EAEJ,CAAC;;EACD,MAAM,CAACN,IAAI,EAAEO,QAAQ,CAAC,GAAGpB,UAAU,CAACQ,OAAO,EAAE,EAAE,CAAC;EAChD;EACA;EACA;;EAEA,oBACIN,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEO;IAAS,CAAE;IAAAG,QAAA,EAC3CjB,KAAK,CAACiB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE/B;AAACpB,EAAA,CAzCeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA2C5B,eAAeF,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}